<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>114, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAH/AAAA///wD/8AAAD///8//wAAAA==
</value>
  </data>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>